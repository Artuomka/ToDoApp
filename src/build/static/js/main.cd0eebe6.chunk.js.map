{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","_ref","toDo","done","react_default","a","createElement","className","SearchPanel","state","term","onSearchChange","e","target","value","_this","setState","props","type","placeholder","this","onChange","React","Component","TodoListItem","important","_this$props","label","onDeleted","onToggleImportant","onToggleDone","classNames","onClick","TodoList","todos","elements","map","item","id","itemProps","Object","objectWithoutProperties","key","components_todo_list_item","assign","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","concat","ItemAddForm","onLabelChange","onSubmit","preventDefault","trim","length","alert","onItemAdded","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","before","slice","after","toConsumableArray","addItem","text","newItem","_ref2","_ref3","oldItem","objectSpread","_ref4","items","toLowerCase","indexOf","_this$state","visibleItems","search","doneCount","todoCount","components_app_header","components_search_panel","components_item_status_filter","components_todo_list","components_item_add_form","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.cd0eebe6.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;\r\n","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst AppHeader = ({toDo, done}) => {\r\n    return (\r\n        <div className=\"app-header d-flex \">\r\n            <h1>Simple Todo List</h1>\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;\r\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nclass SearchPanel extends React.Component {\r\n    state = {\r\n        term: ''\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                   className=\"form-control search-input\"\r\n                   placeholder=\"Start typing to search task\"\r\n                   value={this.state.term}\r\n                   onChange={this.onSearchChange}\r\n\r\n            />\r\n        );\r\n    }\r\n};\r\n\r\nexport default SearchPanel;\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;\r\n","import React from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nclass TodoListItem extends React.Component {\r\n\r\n    state = {\r\n        done: false,\r\n        important: false\r\n    };\r\n\r\n    /*  onLabelClick = () => {\r\n          this.setState((state) => {\r\n              return {\r\n                  done: !state.done\r\n              }\r\n          });\r\n      };\r\n\r\n      onMarkImportant = () => {\r\n          this.setState((state) => {\r\n              return {\r\n                  important: !state.important\r\n              };\r\n          });\r\n      };\r\n  */\r\n\r\n    render() {\r\n        const {label, onDeleted, onToggleImportant, onToggleDone, important, done} = this.props;\r\n        // const {done, important} = this.state;\r\n        let classNames                                                             = \"todo-list-item\";\r\n\r\n        if (done) {\r\n            classNames += \" done\";\r\n        }\r\n\r\n        if (important) {\r\n            classNames += \" important\";\r\n        }\r\n\r\n        return (\r\n            <span className={classNames}>\r\n      <span\r\n          className=\"todo-list-item-label\"\r\n\r\n          onClick={onToggleDone}\r\n      >\r\n        {label}\r\n      </span>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-danger btn-sm float-right\"\r\n              onClick={onDeleted}\r\n      >\r\n        <i className=\"fa fa-trash-o\"/>\r\n      </button>\r\n\r\n       <button type=\"button\"\r\n               className=\"btn btn-outline-success btn-sm float-right\"\r\n               onClick={onToggleImportant}\r\n       >\r\n        <i className=\"fa fa-exclamation\"/>\r\n      </button>\r\n\r\n    </span>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default TodoListItem;\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n    const elements = todos.map((item) => {\r\n        const { id, ...itemProps } = item;\r\n\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem\r\n                    {...itemProps }\r\n                    onDeleted={()=>onDeleted(id)}\r\n                   onToggleImportant={()=>onToggleImportant(id)}\r\n                  onToggleDone={()=>onToggleDone(id)}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            { elements }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;\r\n","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;\r\n","import React from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nclass ItemStatusFilter extends React.Component {\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'},\r\n    ];\r\n\r\n    render() {\r\n        const {filter, onFilterChange} = this.props;\r\n        const buttons  = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const clazz    = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button type=\"button\"\r\n                        className={`btn ${clazz}`}\r\n                        key={name}\r\n                        onClick={()=>onFilterChange(name)}\r\n                >\r\n                    {label}\r\n                </button>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default ItemStatusFilter;\r\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React from 'react';\r\nimport './item-add-form.css';\r\n\r\nclass ItemAddForm extends React.Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.label.trim().length === 0) {\r\n            alert(\"Your task is empty!\");\r\n        }\r\n        else {\r\n            this.props.onItemAdded(this.state.label);\r\n            this.setState({\r\n                label: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                  onSubmit={this.onSubmit}\r\n            >\r\n\r\n                <input type=\"text\"\r\n                       className=\"form-control\"\r\n                       onChange={this.onLabelChange}\r\n                       placeholder=\"Start typing to create task\"\r\n                       value={this.state.label}\r\n                />\r\n                <button className=\"btn btn-success\"\r\n                >Add Task\r\n                </button>\r\n            </form>\r\n        );\r\n    };\r\n};\r\n\r\nexport default ItemAddForm;","import App from './app';\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nimport AppHeader from '../app-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\n\r\nimport './app.css';\r\n\r\nclass App extends React.Component {\r\n\r\n    maxId = 100;\r\n\r\n    state = {\r\n        todoData: [\r\n            this.createTodoItem('Byu a milk'),\r\n            this.createTodoItem('Call Mam'),\r\n            this.createTodoItem('Have a lunch'),\r\n\r\n        ],\r\n        term: '',\r\n        filter: 'all' //all, active, done\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        };\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx      = todoData.findIndex((el) => el.id === id);\r\n            const before   = todoData.slice(0, idx);\r\n            const after    = todoData.slice(idx + 1);\r\n            const newArray = [...before, ...after];\r\n\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    addItem = (text) => {\r\n        const newItem = this.createTodoItem(text);\r\n\r\n        this.setState(({todoData}) => {\r\n            const newArray = [...todoData, newItem];\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        });\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx      = todoData.findIndex((el) => el.id === id);\r\n            const oldItem  = todoData[idx];\r\n            const newItem  = {...oldItem, important: !oldItem.important};\r\n            const before   = todoData.slice(0, idx);\r\n            const after    = todoData.slice(idx + 1);\r\n            const newArray = [...before, newItem, ...after];\r\n\r\n            return {\r\n                todoData: newArray\r\n            }\r\n\r\n        });\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx      = todoData.findIndex((el) => el.id === id);\r\n            const oldItem  = todoData[idx];\r\n            const newItem  = {...oldItem, done: !oldItem.done};\r\n            const before   = todoData.slice(0, idx);\r\n            const after    = todoData.slice(idx + 1);\r\n            const newArray = [...before, newItem, ...after];\r\n\r\n            return {\r\n                todoData: newArray\r\n            }\r\n\r\n        });\r\n        //      console.log('Toggle done ', id);\r\n    };\r\n\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({term});\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter});\r\n    };\r\n\r\n\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n\r\n            default:\r\n                return items;\r\n        }\r\n        ;\r\n    };\r\n\r\n    render() {\r\n        const {todoData, term, filter} = this.state;\r\n        const visibleItems             = this.filter(this.search(todoData, term), filter);\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"todo-app border border-secondary\">\r\n                <AppHeader toDo={todoCount} done={doneCount}/>\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel\r\n                        onSearchChange={this.onSearchChange}\r\n                    />\r\n                    <ItemStatusFilter filter={filter}\r\n                                      onFilterChange={this.onFilterChange}\r\n\r\n                    />\r\n                </div>\r\n\r\n                <TodoList todos={visibleItems}\r\n                          onDeleted={this.deleteItem}\r\n\r\n                          onToggleImportant={this.onToggleImportant}\r\n                          onToggleDone={this.onToggleDone}\r\n                />\r\n                <ItemAddForm onItemAdded={this.addItem}/>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />,\r\n    document.getElementById('root'));\r\n"],"sourceRoot":""}