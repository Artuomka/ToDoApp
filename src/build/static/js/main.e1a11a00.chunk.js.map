{"version":3,"sources":["components/project-list-header/index.js","components/project-list-header/project-list-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/item-add-form/index.js","components/item-add-form/item-add-form.js","components/project-list/index.js","components/project-list/project-list.js","components/app/app.js","components/app/index.js","index.js"],"names":["ProjectListHeader","_ref","toDo","done","header","onProjectDeleted","listID","onProjectEdited","onDateEdited","react_default","a","createElement","className","type","onClick","SearchPanel","state","term","onSearchChange","e","target","value","_this","setState","props","placeholder","this","onChange","React","Component","TodoListItem","important","_this$props","label","onDeleted","onEdited","onToggleImportant","onToggleDone","onToggleDown","onToggleUp","classNames","id","TodoList","todos","elements","map","item","itemProps","Object","objectWithoutProperties","key","components_todo_list_item","assign","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","concat","ItemAddForm","onLabelChange","onSubmit","preventDefault","trim","length","alert","onItemAdded","ProjectList","onListChanged","todoData","maxId","deleteItem","console","log","idx","findIndex","el","before","slice","after","newArray","toConsumableArray","addItem","text","newItem","createTodoItem","_ref2","editItem","_ref3","newItemName","prompt","oldItem","objectSpread","_ref4","_ref5","_ref6","_ref7","_this2","items","toLowerCase","indexOf","_this$state","visibleItems","search","doneCount","todoCount","components_project_list_header","components_search_panel","components_item_status_filter","components_todo_list","components_item_add_form","socket","io","App","listCount","listData","onListAdd","createProjectListItem","undefined","eventEmit","listName","editedProjectData","tmpItem","newListItem","changeData","on","JSON","stringify","setProjectsOnConnection","newItemsArray","i","push","event","data","emit","_this3","components_project_list","ReactDOM","render","components_app","document","getElementById"],"mappings":"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","file":"static/js/main.e1a11a00.chunk.js","sourcesContent":["import ProjectListHeader from './project-list-header';\r\n\r\nexport default ProjectListHeader;\r\n","import React from 'react';\r\nimport './project-list-header.css';\r\n\r\nconst ProjectListHeader = ({\r\n                               toDo,\r\n                               done,\r\n                               header,\r\n                               listID,\r\n                               onProjectDeleted,\r\n                               onProjectEdited,\r\n                               onDateEdited\r\n                           }) => {\r\n    return (\r\n        <div className=\"app-header d-flex \">\r\n          {/*TODO realise datepicker*/}\r\n\r\n            {/*<button*/}\r\n                {/*type=\"button\"*/}\r\n                {/*className=\"btn btn-outline-light btn-lg float-left\"*/}\r\n                {/*onClick={onDateEdited}*/}\r\n            {/*>*/}\r\n                {/*<i className=\"fa fa-calendar\"/>*/}\r\n            {/*</button>*/}\r\n\r\n            <h1>{header}</h1>\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-light btn-lg float-right\"\r\n                onClick={onProjectDeleted}\r\n            >\r\n                <i className=\"fa fa-trash-o\"/>\r\n            </button>\r\n\r\n            <button\r\n                type=\"button\"\r\n                className=\"btn btn-outline-light btn-lg float-right\"\r\n                onClick={onProjectEdited}\r\n            >\r\n                <i className=\"fa fa-pencil\"/>\r\n            </button>\r\n\r\n            <h2>{toDo} more to do, {done} done</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectListHeader;\r\n","import SearchPanel from './search-panel';\r\n\r\nexport default SearchPanel;","import React from 'react';\r\n\r\nimport './search-panel.css';\r\n\r\nclass SearchPanel extends React.Component {\r\n    state = {\r\n        term: ''\r\n    }\r\n\r\n    onSearchChange = (e) => {\r\n        const term = e.target.value;\r\n        this.setState({term});\r\n        this.props.onSearchChange(term);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <input type=\"text\"\r\n                   className=\"form-control search-input\"\r\n                   placeholder=\"Start typing to search task\"\r\n                   value={this.state.term}\r\n                   onChange={this.onSearchChange}\r\n\r\n            />\r\n        );\r\n    }\r\n};\r\n\r\nexport default SearchPanel;\r\n","import TodoListItem from './todo-list-item';\r\n\r\nexport default TodoListItem;\r\n","import React from 'react';\r\n\r\nimport './todo-list-item.css';\r\n\r\nclass TodoListItem extends React.Component {\r\n\r\n    state = {\r\n        done: false,\r\n        important: false\r\n    };\r\n\r\n    render() {\r\n        const {\r\n                  label,\r\n                  onDeleted,\r\n                  onEdited,\r\n                  onToggleImportant,\r\n                  onToggleDone,\r\n                  onToggleDown,\r\n                  onToggleUp,\r\n                  important,\r\n                  done\r\n              }        = this.props;\r\n        // const {done, important} = this.state;\r\n        let classNames = \"todo-list-item\";\r\n\r\n        if (done) {\r\n            classNames += \" done\";\r\n        }\r\n\r\n        if (important) {\r\n            classNames += \" important\";\r\n        }\r\n\r\n        return (\r\n            <span className={classNames}>\r\n      <span\r\n          className=\"todo-list-item-label\"\r\n\r\n          onClick={onToggleDone}\r\n      >\r\n        {label}\r\n      </span>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-danger btn-sm float-right\"\r\n              onClick={onDeleted}\r\n      >\r\n        <i className=\"fa fa-trash-o\"/>\r\n      </button>\r\n\r\n      <button type=\"button\"\r\n              className=\"btn btn-outline-secondary btn-sm float-right\"\r\n              onClick={onEdited}\r\n      >\r\n        <i className=\"fa fa-pencil\"/>\r\n      </button>\r\n\r\n       <button type=\"button\"\r\n               className=\"btn btn-outline-success btn-sm float-right\"\r\n               onClick={onToggleImportant}\r\n       >\r\n        <i className=\"fa fa-exclamation\"/>\r\n      </button>\r\n       {/***********************************/}\r\n\r\n                <button type=\"button\"\r\n                        id=\"btnPriority\"\r\n                        className=\"btn btn-outline-dark float-right\"\r\n                        onClick={onToggleDown}\r\n                >\r\n                <i className=\"fa fa-arrow-down\"/>\r\n                </button>\r\n           <br></br>\r\n                <button type=\"button\"\r\n                        id=\"btnPriority\"\r\n                        className=\"btn btn-outline-dark float-right\"\r\n                        onClick={onToggleUp}\r\n                >\r\n                <i className=\"fa fa-arrow-up\"/>\r\n                </button>\r\n\r\n       {/***********************************/}\r\n    </span>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default TodoListItem;\r\n","import TodoList from './todo-list';\r\n\r\nexport default TodoList;\r\n","import React from 'react';\r\n\r\nimport TodoListItem from '../todo-list-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({\r\n                      todos,\r\n                      onDeleted,\r\n                      onEdited,\r\n                      onToggleImportant,\r\n                      onToggleDone,\r\n                      onToggleDown,\r\n                      onToggleUp,\r\n                  }) => {\r\n\r\n    const elements = todos.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <TodoListItem\r\n                    {...itemProps}\r\n                    onDeleted={() => onDeleted(id)}\r\n                    onEdited={() => onEdited(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleDone={() => onToggleDone(id)}\r\n                    onToggleDown={() => onToggleDown(id)}\r\n                    onToggleUp={() => onToggleUp(id)}\r\n                />\r\n            </li>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group todo-list\">\r\n            {elements}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default TodoList;\r\n","import ItemStatusFilter from './item-status-filter';\r\n\r\nexport default ItemStatusFilter;\r\n","import React from 'react';\r\n\r\nimport './item-status-filter.css';\r\n\r\nclass ItemStatusFilter extends React.Component {\r\n\r\n    buttons = [\r\n        {name: 'all', label: 'All'},\r\n        {name: 'active', label: 'Active'},\r\n        {name: 'done', label: 'Done'},\r\n    ];\r\n\r\n    render() {\r\n        const {filter, onFilterChange} = this.props;\r\n        const buttons  = this.buttons.map(({name, label}) => {\r\n            const isActive = filter === name;\r\n            const clazz    = isActive ? 'btn-info' : 'btn-outline-secondary';\r\n            return (\r\n                <button type=\"button\"\r\n                        className={`btn ${clazz}`}\r\n                        key={name}\r\n                        onClick={()=>onFilterChange(name)}\r\n                >\r\n                    {label}\r\n                </button>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nexport default ItemStatusFilter;\r\n","import ItemAddForm from './item-add-form';\r\n\r\nexport default ItemAddForm;","import React from 'react';\r\nimport './item-add-form.css';\r\n\r\nclass ItemAddForm extends React.Component {\r\n\r\n    state = {\r\n        label: ''\r\n    };\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            label: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.label.trim().length === 0) {\r\n            alert(\"Your task is empty!\");\r\n        }\r\n        else {\r\n            this.props.onItemAdded(this.state.label);\r\n            this.setState({\r\n                label: ''\r\n            });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"item-add-form d-flex\"\r\n                  onSubmit={this.onSubmit}\r\n            >\r\n\r\n                <input type=\"text\"\r\n                       className=\"form-control\"\r\n                       onChange={this.onLabelChange}\r\n                       placeholder=\"Start typing to create task\"\r\n                       value={this.state.label}\r\n                />\r\n                <button className=\"btn btn-success\"\r\n                >Add Task\r\n                </button>\r\n            </form>\r\n        );\r\n    };\r\n};\r\n\r\nexport default ItemAddForm;","import ProjectList from './project-list';\r\n\r\nexport default ProjectList;\r\n","import React from 'react';\r\nimport ProjectListHeader from '../project-list-header';\r\nimport SearchPanel from '../search-panel';\r\nimport TodoList from '../todo-list';\r\nimport ItemStatusFilter from '../item-status-filter';\r\nimport ItemAddForm from '../item-add-form';\r\nimport './project-list.css';\r\n\r\nclass ProjectList extends React.Component {\r\n    listID = this.props;\r\n    onListChanged = this.props.onListChanged;\r\n    todoData = this.props.todoData;\r\n\r\n    maxId = 0;\r\n\r\n    state = {\r\n        todoData:\r\n             [],\r\n        term: '',\r\n        filter: 'all' //all, active, done\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState(() => {\r\n            const newArray = this.todoData;\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        });\r\n    };\r\n\r\n    createTodoItem(label) {\r\n        const newItem = {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId\r\n        };\r\n\r\n        return {\r\n            label,\r\n            important: false,\r\n            done: false,\r\n            id: this.maxId++\r\n        };\r\n    };\r\n\r\n    deleteItem = (id) => {\r\n        console.log(id);\r\n        this.setState(({todoData}) => {\r\n            const idx      = todoData.findIndex((el) => el.id === id);\r\n            const before   = todoData.slice(0, idx);\r\n            const after    = todoData.slice(idx + 1);\r\n            const newArray = [...before, ...after];\r\n            this.onListChanged(newArray, this.listID);\r\n            return {\r\n                todoData: newArray\r\n            };\r\n        });\r\n    };\r\n\r\n    addItem = (text) => {\r\n        const newItem = this.createTodoItem(text);\r\n        this.setState(({todoData}) => {\r\n            const newArray = [...todoData, newItem];\r\n            this.onListChanged(newArray, this.listID);\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        });\r\n    };\r\n\r\n    editItem = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const newItemName = prompt(\"Enter new task name\");\r\n            if (newItemName===null){\r\n                return;\r\n            }\r\n            if (newItemName.trim().length===0){\r\n                alert(\"Task name cannot be empty!\");\r\n                return;\r\n            }\r\n            const idx      = todoData.findIndex((el) => el.id === id);\r\n            const oldItem  = todoData[idx];\r\n            const newItem  = {...oldItem, label: newItemName};\r\n            const before   = todoData.slice(0, idx);\r\n            const after    = todoData.slice(idx + 1);\r\n            const newArray = [...before, newItem, ...after];\r\n            this.onListChanged(newArray, this.listID);\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        });\r\n    };\r\n\r\n    onToggleImportant = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx      = todoData.findIndex((el) => el.id === id);\r\n            const oldItem  = todoData[idx];\r\n            const newItem  = {...oldItem, important: !oldItem.important};\r\n            const before   = todoData.slice(0, idx);\r\n            const after    = todoData.slice(idx + 1);\r\n            const newArray = [...before, newItem, ...after];\r\n            this.onListChanged(newArray, this.listID);\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        });\r\n    };\r\n\r\n    onToggleDone = (id) => {\r\n        this.setState(({todoData}) => {\r\n            const idx      = todoData.findIndex((el) => el.id === id);\r\n            const oldItem  = todoData[idx];\r\n            const newItem  = {...oldItem, done: !oldItem.done};\r\n            const before   = todoData.slice(0, idx);\r\n            const after    = todoData.slice(idx + 1);\r\n            const newArray = [...before, newItem, ...after];\r\n            this.onListChanged(newArray, this.listID);\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        });\r\n    };\r\n\r\n    onToggleDown = (id) =>{\r\n        this.setState(({todoData}) => {\r\n            const idx      = todoData.findIndex((el) => el.id === id);\r\n            if (idx >= todoData.length-1) {\r\n                alert(\"This item has lowest priority!\");\r\n                return;\r\n            }\r\n            const oldItem  = todoData[idx];\r\n            const newItem  = todoData[idx+1];\r\n            todoData[idx] = newItem;\r\n            todoData[idx+1] = oldItem;\r\n            const before   = todoData.slice(0, idx);\r\n            const after    = todoData.slice(idx + 1);\r\n            const newArray = [...before, newItem, ...after];\r\n            this.onListChanged(newArray, this.listID);\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        });\r\n    };\r\n\r\n    onToggleUp = (id) =>{\r\n        this.setState(({todoData}) => {\r\n            const idx      = todoData.findIndex((el) => el.id === id);\r\n            if (idx <= 0) {\r\n                alert(\"This item has highest priority!\");\r\n                return;\r\n            }\r\n            const oldItem  = todoData[idx];\r\n            const newItem  = todoData[idx-1];\r\n            todoData[idx] = newItem;\r\n            todoData[idx-1] = oldItem;\r\n            const before   = todoData.slice(0, idx);\r\n            const after    = todoData.slice(idx + 1);\r\n            const newArray = [...before, newItem, ...after];\r\n            this.onListChanged(newArray, this.listID);\r\n            return {\r\n                todoData: newArray\r\n            }\r\n        });\r\n    };\r\n\r\n    search(items, term) {\r\n        if (term.length === 0) {\r\n            return items;\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.toLowerCase().indexOf(term.toLowerCase()) > -1;\r\n        });\r\n    };\r\n\r\n    onSearchChange = (term) => {\r\n        this.setState({term});\r\n    };\r\n\r\n    onFilterChange = (filter) => {\r\n        this.setState({filter});\r\n    };\r\n\r\n    filter(items, filter) {\r\n        switch (filter) {\r\n            case 'all':\r\n                return items;\r\n\r\n            case 'active':\r\n                return items.filter((item) => !item.done);\r\n\r\n            case 'done':\r\n                return items.filter((item) => item.done);\r\n\r\n            default:\r\n                return items;\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {todoData, term, filter} = this.state;\r\n        const visibleItems             = this.filter(this.search(todoData, term), filter);\r\n        const {header, onProjectDeleted, onProjectEdited, onDateEdited} = this.props;\r\n\r\n        const doneCount = todoData.filter((el) => el.done).length;\r\n        const todoCount = todoData.length - doneCount;\r\n\r\n        return (\r\n            <div className=\"project-list border border-secondary\">\r\n                <ProjectListHeader toDo={todoCount}\r\n                                   done={doneCount}\r\n                                   header={header}\r\n                                   onProjectDeleted = {onProjectDeleted}\r\n                                   onProjectEdited = {onProjectEdited}\r\n                                   onDateEdited = {onDateEdited}\r\n                />\r\n                <div className=\"top-panel d-flex\">\r\n                    <SearchPanel\r\n                        onSearchChange={this.onSearchChange}\r\n                    />\r\n                    <ItemStatusFilter filter={filter}\r\n                                      onFilterChange={this.onFilterChange}\r\n                    />\r\n                </div>\r\n\r\n                <TodoList todos={visibleItems}\r\n                          onDeleted={this.deleteItem}\r\n                          onEdited = {this.editItem}\r\n                          onToggleImportant={this.onToggleImportant}\r\n                          onToggleDone={this.onToggleDone}\r\n                          onToggleDown={this.onToggleDown}\r\n                          onToggleUp={this.onToggleUp}\r\n                />\r\n                <ItemAddForm onItemAdded={this.addItem}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectList;\r\n","import React from 'react';\r\nimport ProjectList from '../project-list';\r\nimport './app.css';\r\nimport io from \"socket.io-client\";\r\n\r\nlet socket = io('http://localhost:9000');\r\n\r\nclass App extends React.Component {\r\n    listCount = 0;\r\n\r\n    state = {\r\n        listData: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        socket.on('connect', socket => {\r\n            console.log('Connection to socket.io emitted from app emitted');\r\n        });\r\n\r\n        this.eventEmit('getProjects');\r\n\r\n        socket.on('setProjects', items => {\r\n            console.log('Set Projects Emitted ' + JSON.stringify(items));\r\n            this.setProjectsOnConnection(items);\r\n        });\r\n    };\r\n\r\n    setProjectsOnConnection(items) {\r\n        let newItemsArray = [];\r\n        for (let i = 0; i < items.length; i++) {\r\n            let newItem = {\r\n                listName: items[i].listName,\r\n                listID: items[i].listID,\r\n                todoData: items[i].todoData,\r\n            };\r\n            newItemsArray.push(newItem);\r\n            this.listCount = newItemsArray.length;\r\n        }\r\n\r\n        this.setState(() => {\r\n            return {\r\n                listData: newItemsArray\r\n            };\r\n        });\r\n    }\r\n\r\n    eventEmit(event, data) {\r\n        socket.emit(event, data);\r\n    };\r\n\r\n    onListAdd = () => {\r\n        const newItem = this.createProjectListItem(++this.listCount);\r\n        if (newItem === undefined) {\r\n            return;\r\n        }\r\n        this.setState(({listData}) => {\r\n            const newArray = [...listData, newItem];\r\n            return {\r\n                listData: newArray\r\n            }\r\n        });\r\n        this.eventEmit('onListAdd', newItem);\r\n    };\r\n\r\n    createProjectListItem = (listCount) => {\r\n        const newItemName = prompt(\"Enter the new project name (not more 14 characters long)\");\r\n        if (newItemName === null) {\r\n            return;\r\n        }\r\n        if (newItemName.trim().length === 0) {\r\n            alert(\"Project name cannot be empty!\");\r\n            return;\r\n        }\r\n        if (newItemName.trim().length > 14) {\r\n            alert(\"Project name is to long. It must be not more than 14 characters.\");\r\n            return;\r\n        }\r\n        const newItem = {\r\n            listName: newItemName.trim(),\r\n            listID: listCount\r\n        };\r\n        return newItem;\r\n    };\r\n\r\n    onProjectDeleted = (listID) => {\r\n        this.setState(({listData}) => {\r\n            const idx      = listData.findIndex((el) => el.listID === listID);\r\n            const before   = listData.slice(0, idx);\r\n            const after    = listData.slice(idx + 1);\r\n            const newArray = [...before, ...after];\r\n\r\n            return {\r\n                listData: newArray\r\n            };\r\n        });\r\n        this.eventEmit('onProjectDeleted', listID);\r\n    };\r\n\r\n    onProjectEdited = (listID) => {\r\n        let editedProjectData = null;\r\n        this.setState(({listData}) => {\r\n            const idx         = listData.findIndex((el) => el.listID === listID);\r\n            const newItemName = prompt(\"Enter new list name. (not more 14 characters long)\");\r\n            if (newItemName === null) {\r\n                return;\r\n            }\r\n            if (newItemName.trim().length === 0) {\r\n                alert(\"Project name cannot be empty!\");\r\n                return;\r\n            }\r\n            if (newItemName.trim().length > 14) {\r\n                alert(\"Project name is to long. It must be not more than 14 characters.\");\r\n                return;\r\n            }\r\n            let tmpItem       = listData[idx];\r\n            tmpItem.listName  = newItemName;\r\n            const newListItem = tmpItem;\r\n            let newArray      = listData;\r\n            newArray[idx]     = newListItem;\r\n            editedProjectData = {\r\n                listName: newItemName,\r\n                listID: listID\r\n            };\r\n            return {\r\n                listData: newArray\r\n            };\r\n        });\r\n        if (editedProjectData != null) {\r\n            this.eventEmit('onProjectEdited', editedProjectData);\r\n        }\r\n    };\r\n// TODO realise datepicker\r\n    onDateEdited    = (listID) => {\r\n        alert('LIST DATE EDIT CALLED!');\r\n    };\r\n\r\n    onListChanged = (todoData, listID) => {\r\n        const changeData = {\r\n            todoData: todoData,\r\n            listID: listID\r\n        };\r\n        this.eventEmit('onListChanged', changeData);\r\n    };\r\n\r\n    render() {\r\n        const elements = this.state.listData.map((item) => {\r\n            const {\r\n                      listID,\r\n                      listName,\r\n                      todoData,\r\n                  } = item;\r\n            console.log(JSON.stringify(todoData));\r\n\r\n            return (\r\n                <li key={listID} className=\"project-list-item\">\r\n                    <ProjectList\r\n                        listID={listID}\r\n                        header={listName}\r\n                        todoData ={todoData}\r\n                        onProjectDeleted={() => this.onProjectDeleted(listID)}\r\n                        onProjectEdited={() => this.onProjectEdited(listID)}\r\n                        onDateEdited={() => this.onDateEdited(listID)}\r\n                        onListChanged = {this.onListChanged}\r\n                    />\r\n                </li>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <div className='head-text'>SIMPLE TODO LISTS</div>\r\n\r\n                <ul>\r\n                    {elements}\r\n                </ul>\r\n\r\n                <div className=\"btn-container\">\r\n                    <button type=\"button\"\r\n                            id=\"btnListAdd\"\r\n                            className=\"btn btn-primary btn-lg\"\r\n                            onClick={this.onListAdd}\r\n                    >\r\n                        Add TODO List\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import App from './app';\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />,\r\n    document.getElementById('root'));\r\n"],"sourceRoot":""}